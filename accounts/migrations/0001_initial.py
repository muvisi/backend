# Generated by Django 2.2.28 on 2022-10-11 19:23

import accounts.managers
from django.db import migrations, models
import uuid
class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=13, null=True, unique=True)),
                ('gender', models.CharField(blank=True, max_length=8, null=True)),
                ('department', models.CharField(blank=True, max_length=100, null=True)),
                ('role', models.CharField(blank=True, choices=[('hotel_admin', 'hotel_admin'), ('hotel_guest', 'hotel_guest'), ('super_admin', 'super_admin'), ('hotel_receptionist', 'hotel_receptionist'), ('hotel_cashier', 'hotel_cashier')], max_length=50, null=True)),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='res/profiles/')),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=True)),
                ('is_archive', models.BooleanField(default=False)),
                ('jwt_secret', models.UUIDField(default=uuid.uuid4)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('deleted_by', models.CharField(blank=True, max_length=100, null=True)),
                ('deleted_date', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'account',
                'verbose_name_plural': 'accounts',
            },
            managers=[
                ('objects', accounts.managers.UserManager()),
            ],
        ),
    ]
